(function () {
	'use strict';

	frappe.templates['address_list'] = '<div class="clearfix"></div> {% for(var i=0, l=addr_list.length; i<l; i++) { %} <div class="address-box">  <p class="h6">   {%= i+1 %}. {%= addr_list[i].address_title %}   <a href="#Form/Address/{%= encodeURIComponent(addr_list[i].name) %}" class="btn btn-default btn-xs pull-right"    style="margin-top:-3px; margin-right: -5px;" title="Edit">    <i class="octicon octicon-pencil"></i></a>    <a class="btn btn-primary btn-xs pull-right unlink_address" style="margin-top:-3px; margin-right: 10px;"    data_address_name="{%= addr_list[i].name %}" title="Unlink">    <i class="fa fa-unlink"></i></a>    <a class="btn btn-danger btn-xs pull-right delete_address" style="margin-top:-3px; margin-right: 10px;"    data_address_name="{%= addr_list[i].name %}" title="Delete">    <i class="octicon octicon-trashcan"></i></a>  </p>  <p class="h6">   {% if(addr_list[i].address_type!="Other") { %}   <span class="text-muted">({%= __(addr_list[i].address_type) %})</span>{% } %}   {% if(addr_list[i].is_primary_address) { %}   <span class="text-muted">({%= __("Primary") %})</span>{% } %}   {% if(addr_list[i].is_shipping_address) { %}   <span class="text-muted">({%= __("Shipping") %})</span>{% } %}  </p>  <p>{%= addr_list[i].display %}</p> </div> {% } %} {% if(!addr_list.length) { %} <p class="text-muted small">{%= __("No address added yet.") %}</p> {% } %} <p>  <button class="btn btn-xs btn-default btn-address">{{ __("New Address") }}</button>  <button class="btn btn-xs btn-default btn-address-link">   {{ __("Link Address") }}</button> </p>';

	frappe.templates['contact_list'] = '<div class="clearfix"></div> {% for(var i=0, l=contact_list.length; i<l; i++) { %} <div class="address-box">  <p class="h6">   {%= contact_list[i].first_name %} {%= contact_list[i].last_name %}   {% if(contact_list[i].is_primary_contact) { %}   <span class="text-muted">({%= __("Primary") %})</span>   {% } %}    <a href="#Form/Contact/{%= encodeURIComponent(contact_list[i].name) %}" class="btn btn-xs btn-default pull-right"    style="margin-top:-3px; margin-right: -5px;" title="Edit">    <i class="octicon octicon-pencil"></i></a>    <a class="btn btn-primary btn-xs pull-right unlink_contact" style="margin-top:-3px; margin-right: 10px;"    data_contact_name="{%= contact_list[i].name %}" title="Unlink">    <i class="fa fa-unlink"></i></a>    <a class="btn btn-danger btn-xs pull-right delete_contact" style="margin-top:-3px; margin-right: 10px;"    data_contact_name="{%= contact_list[i].name %}" title="Delete">    <i class="octicon octicon-trashcan"></i></a>  </p>  {% if (contact_list[i].phones || contact_list[i].email_ids) { %}  <p>   {% if(contact_list[i].phone) { %}   <strong>{%= __("Phone") %}:</strong> {%= contact_list[i].phone %}<span class="text-muted"> ({%= __("Primary") %})</span><br>   {% endif %}   {% if(contact_list[i].mobile_no) { %}   <strong>{%= __("Mobile No") %}:</strong> {%= contact_list[i].mobile_no %}<span class="text-muted"> ({%= __("Primary") %})</span><br>   {% endif %}   {% if(contact_list[i].phone_nos) { %}   {% for(var j=0, k=contact_list[i].phone_nos.length; j<k; j++) { %}   <strong>{%= __("Phone") %}:</strong> {%= contact_list[i].phone_nos[j].phone %}<br>   {% } %}   {% endif %}  </p>   <p>   {% if(contact_list[i].email_id) { %}   <strong>{%= __("Email") %}: </strong>{%= contact_list[i].email_id %}<span class="text-muted"> ({%= __("Primary") %})</span><br>   {% endif %}   {% if(contact_list[i].email_ids) { %}   {% for(var j=0, k=contact_list[i].email_ids.length; j<k; j++) { %}   <strong>{%= __("Email") %}:</strong> {%= contact_list[i].email_ids[j].email_id %}<br>   {% } %}   {% endif %}  </p>   <p>   {% if(contact_list[i].designation){ %}    <strong>{%= __("Designation") %}:</strong> {%= contact_list[i].designation %}<br>   {% } %}  </p>    {% endif %}  <p>   {% if (contact_list[i].address) { %}   {%= __("Address") %}: {%= contact_list[i].address %}<br>   {% endif %}  </p> </div> {% } %} {% if(!contact_list.length) { %} <p class="text-muted small">{%= __("No contacts added yet.") %}</p> {% } %} <p><button class="btn btn-xs btn-default btn-contact">   {{ __("New Contact") }}</button> <button class="btn btn-xs btn-default btn-contact-link">   {{ __("Link Contact") }}</button> </p>';

	frappe.provide('frappe.contacts');

	$.extend(frappe.contacts, {
		clear_address_and_contact: function (frm) {
			frm.fields_dict['address_html'] && $(frm.fields_dict['address_html'].wrapper).html("");
			frm.fields_dict['contact_html'] && $(frm.fields_dict['contact_html'].wrapper).html("");
		},

		render_address_and_contact: function (frm) {
			// render address
			if (frm.fields_dict['address_html'] && "addr_list" in frm.doc.__onload) {
				$(frm.fields_dict['address_html'].wrapper)
					.html(frappe.render_template("address_list",
						frm.doc.__onload))
					.find(".btn-address").on("click", function () {
						frappe.new_doc("Address");
					});
			}

			$(document).on('click', '.btn-address-link', function () {
				frappe.prompt({
						label: "Link Address",
						fieldname: "address",
						fieldtype: "Link",
						options: "Address",
						reqd: 1,
						get_query: function () {
							var addr_list = frm.doc.__onload.addr_list.map(function (addr) { return addr.name; });
							return {
								filters: {
									"name": ["not in", addr_list]
								}
							}
						}
					},
					function (data) {
						frappe.call({
							method: "bloomstack_core.utils.link_address_or_contact",
							args: {
								"ref_doctype": "Address",
								"ref_name": data.address,
								"link_doctype": frm.doctype,
								"link_name": frm.docname
							},
							callback: function () {
								window.location.reload();
							}
						});
					}, __("Select Address"));
			});

			$(document).on('click', '.address-box a.unlink_address', function () {
				var name = $(this).attr('data_address_name');
				frappe.confirm(
					("Are you sure you want to unlink this address with " + (cur_frm.docname) + "?"),
					function () {
						frappe.call({
							method: "bloomstack_core.utils.unlink_address_or_contact",
							args: {
								"ref_doctype": "Address",
								"ref_name": name,
								"doctype": cur_frm.doctype,
								"name": cur_frm.docname
							},
							callback: function () {
								window.location.reload();
							}
						});
					}
				);
			});

			$(document).on('click', '.address-box a.delete_address', function () {
				var name = $(this).attr('data_address_name');
				frappe.confirm(
					("If this address is linked to any other entity in the system, it will instead remove the address from " + (cur_frm.docname) + ".<br><br>\n\t\t\t\t\tAre you sure you want to delete this address?"),
					function () {
						frappe.call({
							method: "bloomstack_core.utils.delete_address_or_contact",
							args: {
								"ref_doctype": "Address",
								"ref_name": name,
								"doctype": cur_frm.doctype,
								"name": cur_frm.docname
							},
							callback: function () {
								window.location.reload();
							}
						});
					}
				);
			});

			// render contact
			if (frm.fields_dict['contact_html'] && "contact_list" in frm.doc.__onload) {
				$(frm.fields_dict['contact_html'].wrapper)
					.html(frappe.render_template("contact_list",
						frm.doc.__onload))
					.find(".btn-contact").on("click", function () {
						frappe.new_doc("Contact");
					} 
					);
			}

			$(document).on('click', '.btn-contact-link', function () {
				frappe.prompt({
						label: "Link Contact",
						fieldname: "contact",
						fieldtype: "Link",
						options: "Contact",
						reqd: 1,
						get_query: function () {
							var contact_list = frm.doc.__onload.contact_list.map(function (contact) { return contact.name; });
							return {
								filters: {
									"name": ["not in", contact_list]
								}
							}
						}
					},
					function (data) {
						frappe.call({
							method: "bloomstack_core.utils.link_address_or_contact",
							args: {
								"ref_doctype": "Contact",
								"ref_name": data.contact,
								"link_doctype": frm.doctype,
								"link_name": frm.docname
							},
							callback: function () {
								window.location.reload();
							}
						});
					}, __("Select Contact"));
			});

			$(document).on('click', '.address-box a.unlink_contact', function () {
				var name = $(this).attr('data_contact_name');
				frappe.confirm(
					("Are you sure you want to unlink this contact with " + (cur_frm.docname) + "?"),
					function () {
						frappe.call({
							method: "bloomstack_core.utils.unlink_address_or_contact",
							args: {
								"ref_doctype": "Contact",
								"ref_name": name,
								"doctype": cur_frm.doctype,
								"name": cur_frm.docname
							},
							callback: function () {
								window.location.reload();
							}
						});
					}
				);
			});

			$(document).on('click', '.address-box a.delete_contact', function () {
				var name = $(this).attr('data_contact_name');
				frappe.confirm(
					("If this contact is linked to any other entity in the system, it will instead remove the contact from " + (cur_frm.docname) + ".<br><br>\n\t\t\t\t\t\t\tAre you sure you want to delete this contact?"),
					function () {
						frappe.call({
							method: "bloomstack_core.utils.delete_address_or_contact",
							args: {
								"ref_doctype": "Contact",
								"ref_name": name,
								"doctype": cur_frm.doctype,
								"name": cur_frm.docname
							},
							callback: function () {
								window.location.reload();
							}
						});
					}
				);
			});

		}
	});

}());
//# sourceMappingURL=address_and_contact.min.js.map
